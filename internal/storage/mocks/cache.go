// Code generated by mockery v2.40.1. DO NOT EDIT.

package mocks

import (
	model "github.com/Shemistan/grpc_user_api/internal/model"
	mock "github.com/stretchr/testify/mock"
)

// Cache is an autogenerated mock type for the Cache type
type Cache struct {
	mock.Mock
}

// AddInCache provides a mock function with given fields: req
func (_m *Cache) AddInCache(req model.AccessRequest) {
	_m.Called(req)
}

// GetAccessesForRole provides a mock function with given fields: role
func (_m *Cache) GetAccessesForRole(role int64) map[string]bool {
	ret := _m.Called(role)

	if len(ret) == 0 {
		panic("no return value specified for GetAccessesForRole")
	}

	var r0 map[string]bool
	if rf, ok := ret.Get(0).(func(int64) map[string]bool); ok {
		r0 = rf(role)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(map[string]bool)
		}
	}

	return r0
}

// NewCache creates a new instance of Cache. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewCache(t interface {
	mock.TestingT
	Cleanup(func())
}) *Cache {
	mock := &Cache{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
